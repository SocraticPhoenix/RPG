buildscript {
    repositories {
        maven {
            name = 'forge'
            url = 'https://files.minecraftforge.net/maven'
        }
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}


//Plugins
plugins {
    id "net.ltgt.apt" version "0.10"
    id "com.github.johnrengelman.shadow" version "5.1.0"
    id 'org.spongepowered.plugin' version '0.9.0'
    id 'net.minecrell.vanillagradle.server' version '2.2-6'
}

apply plugin : 'java'
apply plugin : 'maven'
apply plugin : 'idea'
//End Plugins

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

//Program Specific Variables
def programVersion = "0.0.0"
def programGroup = "com.gmail.socraticphoenix"
//End Variables

//Gradle Variables
group = "$programGroup"
version = "$programVersion"
sourceCompatibility = 1.8
//End Gradle Variables

configurations {
    library
    compile.extendsFrom library
    runtime.extendsFrom library
}

//Repositories and Dependencies
repositories {
    mavenCentral()

    maven {
        name "jitpack.io"
        url "https://jitpack.io"
    }
}

dependencies {
    library "com.github.SocraticPhoenix:Parse:master-SNAPSHOT"
    library "com.github.SocraticPhoenix:Collect:master-SNAPSHOT"
    library "com.github.SocraticPhoenix:Conventional:master-SNAPSHOT"
    library "com.github.SocraticPhoenix:InverseY:master-SNAPSHOT"
    library "com.github.SocraticPhoenix:Mirror:master-SNAPSHOT"
    library "com.github.SocraticPhoenix:JLSC:master-SNAPSHOT"
    library "com.github.virtuald:curvesapi:master-SNAPSHOT"
    library "com.github.SocraticPhoenix:PIO:master-SNAPSHOT"

    compileOnly 'org.spongepowered:spongeapi:7.1.0'
}

minecraft {
    version = "1.12.2"
    runDir = "run"
    mappings = "stable_39"
}
//End Repositories and Dependencies

//Tasks
task packageTranslations(type: Zip) {
    archiveFileName = "translations.zip"
    destinationDirectory = file("./src/main/resources/assets/socraticrpg")

    from("./translations")
}

processResources.dependsOn(packageTranslations)

javadoc {
    destinationDir = file("docs")
}

shadowJar {
    classifier = "shadow"
}

reobf {
    shadowJar {}
}
//End Tasks

//Configurations
configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}
//End configurations
